{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","filter","query","onSetFilter","onSetQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","TodoModal","onModalClose","useState","user","setUser","a","selectedUser","useEffect","getUsersFromServer","href","email","name","App","setTodos","setFilter","setQuery","allTodos","getTodosFromServer","handleModalClose","useCallback","length","queryFilter","toLowerCase","includes","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f0bfa7e.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (selectedTodo: Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': todo.id === selectedTodo?.id },\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setSelectedTodo(todo);\n              }}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    { 'fa-eye': selectedTodo?.id !== todo.id },\n                    { 'fa-eye-slash': selectedTodo?.id === todo.id },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","interface Props {\n  filter: string,\n  query: string,\n  onSetQuery: (value: string) => void,\n  onSetFilter: (value: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  query,\n  onSetFilter,\n  onSetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event) => onSetFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onSetQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onSetQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo,\n  onModalClose: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onModalClose }) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = selectedTodo;\n\n  const [user, setUser] = useState<User>();\n\n  async function getUsersFromServer() {\n    const selectedUser = await getUser(userId);\n\n    setUser(selectedUser);\n  }\n\n  useEffect(() => {\n    getUsersFromServer();\n  }, [id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onModalClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  async function getTodosFromServer() {\n    const allTodos = await getTodos();\n\n    setTodos(allTodos);\n  }\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const filteredTodos = () => {\n    return todos.filter(todo => {\n      const queryFilter = todo.title.toLowerCase().includes(query.toLowerCase().trim());\n\n      switch (filter) {\n        case 'active':\n          return queryFilter && !todo.completed;\n        case 'completed':\n          return queryFilter && todo.completed;\n        default:\n          return queryFilter;\n      }\n    });\n  };\n\n  const handleModalClose = useCallback(() => {\n    return setSelectedTodo(null);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                query={query}\n                onSetFilter={setFilter}\n                onSetQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos()}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onModalClose={handleModalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}